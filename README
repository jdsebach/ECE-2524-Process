1.) This is a good use of object oriented design, we are building the class for one process to be running. If later down the line we want multiple processes to be ran at the same time, we can just make another process class within the code easily and mess with the code as is.
2.) Have the program give a warning as soon as the Process object goes out of scope so that the programmer to have a choice between which action is taken. If the programmer wants a specific method to work the entire time the code is running, allow him or her to choose before problems occur.
3.) Before the signal is given off by the child to terminate, pass a signal to the parent and allow a small bit of time for the parent to run its necessary extractions before the child self-terminates. Either that or save the childs data in a default place before it terminates so that if a parent needs that data, it will be able to grab after it finds out that the child terminated.
